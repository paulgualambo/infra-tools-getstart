# Utilizando una funci칩n para configurar las VMs
def configure_vm(config, vm_name, vm_hostname, vm_ip, vm_network_bridge, vm_box, vm_skip_sh_scripts, vm_script, vm_memory=1024, vm_cpus=2)
  config.vm.define vm_name do |vm_config|
    vm_config.vm.box = vm_box
    vm_config.vm.network "public_network", bridge: vm_network_bridge, ip: vm_ip
    vm_config.vm.hostname = vm_hostname
    vm_config.vm.provider "virtualbox" do |vb|
      vb.name = vm_name
      vb.memory = vm_memory
      vb.cpus = vm_cpus
    end

    unless vm_skip_sh_scripts
      configure_vm_script(vm_config, vm_script)
    end
    
  end
end

def configure_vm_script(config, script)

  script = script.downcase

  unless script.to_s.strip.empty?
    config.vm.provision "shell", inline: <<-SHELL
      echo "Copiando y ejecutando el script...#{script}"
      mkdir -p scripts
      cp /vagrant/scripts/#{script} /home/vagrant/scripts      
      cp /vagrant/scripts/install.sh /home/vagrant/scripts
      ls /home/vagrant/scripts
      chmod +x /home/vagrant/scripts/#{script}
      chmod +x /home/vagrant/scripts/install.sh
      /home/vagrant/scripts/#{script}
    SHELL
  else
    config.vm.provision "shell", inline: <<-SHELL
      echo "Copiando y ejecutando el script..."
      mkdir -p scripts
      cp /vagrant/scripts/install.sh /home/vagrant/scripts
      chmod +x /home/vagrant/scripts/install.sh
      /home/vagrant/scripts/install.sh
    SHELL
  end
end

Vagrant.configure("2") do |config|
  # Variables de entorno o valores por defecto
  ip_address_assigned_app = ENV['IP_APP'] || "192.168.18.141"
  ip_address_assigned_infra = ENV['IP_INFRA'] || "192.168.18.142"
  ip_address_assigned_deploy = ENV['IP_DEPLOY'] || "192.168.18.143"
  vm_hostname = ENV['GROUP'] || "SANDBOX"
  bridged_network = ENV['INTERFACE_NET'] || "enp0s31f6"
  
  # Par치metros para el Vagrantfile
  box_so = ENV['BOX_NAME'] || "bento/ubuntu-22.04"
  script_initial = "#{ENV['GROUP'] || "SANDBOX"}_script.sh"

  skip_sh_scripts = ENV['SKIP_SH_SCRIPTS']

  ENV['VAGRANT_DEFAULT_PROVIDER'] = 'virtualbox'
  
  # Configuraci칩n de las VMs usando la funci칩n
  configure_vm(config, "#{vm_hostname}_app", "#{vm_hostname}App", ip_address_assigned_app, bridged_network, box_so, skip_sh_scripts, script_initial)
  configure_vm(config, "#{vm_hostname}_infra", "#{vm_hostname}Infra", ip_address_assigned_infra, bridged_network, box_so, skip_sh_scripts, script_initial)
  configure_vm(config, "#{vm_hostname}_deploy", "#{vm_hostname}Deploy", ip_address_assigned_deploy, bridged_network, box_so, skip_sh_scripts, script_initial)
end
