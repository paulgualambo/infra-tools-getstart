# -*- mode: ruby -*-
# vi: set ft=ruby :

# Every Vagrant development environment requires a box. You can search for
# boxes at https://atlas.hashicorp.com/search.

# VAR ENV

# Parámetros para el Vagrantfile
PROVISION = ENV['PROVISION'] || "true"
MOUNTAING = ENV['MOUNTAING'] || "true"
BOX_IMAGE = ENV['BOX_IMAGE'] || "bento/ubuntu-24.04"
ENVIRONMENT = ENV['ENVIRONMENT'] || "SANDBOX"
USER = ENV['USER'] || "paul"
IP_BASE = ENV['IP_BASE'] || "192.168.56"
IP_START = ENV['IP_START'].to_i
DIR_PROJECTS = ENV['DIR_PROJECTS'] ||"/home/#{USER}/projects"
ENV['VAGRANT_DEFAULT_PROVIDER'] = 'virtualbox'
vm_memory = 2048
vm_cpus =  2
vm_script = "#{ENVIRONMENT}_script.sh".downcase!
bridged_network = ENV['INTERFACE_NET'] || "enp0s31f6"


Vagrant.configure("2") do |config|

  vms = [
    {nombrehost:"#{ENVIRONMENT}.APP", node: "APP", ip: "#{IP_BASE}.#{IP_START}", memory: vm_memory, cpus: vm_cpus, script: vm_script },
    {nombrehost:"#{ENVIRONMENT}.INFRA", node: "INFRA", ip: "#{IP_BASE}.#{IP_START + 2}", memory: vm_memory, cpus: vm_cpus, script: vm_script },
    {nombrehost:"#{ENVIRONMENT}.DEPLOY", node: "DEPLOY", ip: "#{IP_BASE}.#{IP_START + 4}", memory: vm_memory, cpus: vm_cpus, script: vm_script }
  ]

  vms.each do |vm|
    config.vm.define vm[:nombrehost] do |subconfig|
      subconfig.vm.box = BOX_IMAGE
      subconfig.vm.hostname = vm[:nombrehost]
      subconfig.vm.network :private_network, ip: vm[:ip]
      shared_folder = "#{ENV['SHARED_FOLDER']}#{vm[:nombrehost].downcase}"

      # El nombre en virtual box
      subconfig.vm.provider "virtualbox" do |vb|
        vb.name = vm[:nombrehost]
        vb.memory = vm[:memory]
        vb.cpus = vm[:cpus]
      end

      if PROVISION == "true"
        # Provisión para instalar paquetes y crear usuario
        subconfig.vm.provision "shell", inline: <<-SHELL
            echo "Instalando avahi-daemon y libnss-mdns..."
            apt-get update
            apt-get install -y avahi-daemon libnss-mdns
            systemctl restart avahi-daemon
            echo "Instalación completada avahi-daemon y libnss-mdns."
        SHELL
      end

      configure_vm_script(subconfig, vm[:script])            

      if MOUNTAING == "true"
        subconfig.vm.synced_folder shared_folder, DIR_PROJECTS , create: true, owner: "#{USER}", group: "#{USER}"
        subconfig.vm.provision "shell", inline: <<-SHELL
            echo "Carpeta compartida configurada: #{shared_folder}"
        SHELL
      end
    end
  end
end


def configure_vm_script(config, script)

  script = script.downcase
  unless script.to_s.strip.empty?
    config.vm.provision "shell", inline: <<-SHELL
      echo "Copiando y ejecutando el script...#{script}"
      mkdir -p scripts
      cp /vagrant/scripts/#{script} /home/vagrant/scripts      
      cp /vagrant/scripts/install.sh /home/vagrant/scripts
      ls /home/vagrant/scripts
      chmod +x /home/vagrant/scripts/#{script}
      chmod +x /home/vagrant/scripts/install.sh
      /home/vagrant/scripts/#{script}
    SHELL
  else
    config.vm.provision "shell", inline: <<-SHELL
      echo "Copiando y ejecutando el script..."
      mkdir -p scripts
      cp /vagrant/scripts/install.sh /home/vagrant/scripts
      chmod +x /home/vagrant/scripts/install.sh
      /home/vagrant/scripts/install.sh
    SHELL
  end

end